(declare-datatypes (T1 T2 T3 T4 T5)
 ((Recv (mk-recv (match T1) (ep T2) (var T3) (event T4) (nearestwait T5)))))
(declare-datatypes (T1 T2 T3 T4)
((Send (mk-send (match T1) (ep T2) (value T3) (event T4)))))

(define-fun HB ((a Int) (b Int)) Bool
  (if(< a b)
 true
 false))
(define-fun HB* ((a Int) (b Int)) Bool
  (if(= a (- b 1))
 true
 false))

(define-fun MATCH ((r (Recv Int Int Int Int Int)) (s (Send Int Int Int Int))) Bool
(if(and (= (ep r) (ep s)) (= (var r) (value s))
(HB* (event s) (event r)) (= (match r) (event s))
(= (match s) (event r)))
true
false
)
)

(declare-const TB_0 Int)
(declare-const T0_1 Int)
(declare-const req_0_0 Int)
(declare-const T0_2 Int)
(declare-const T0_3 Int)
(declare-const req_0_1 Int)
(declare-const T0_4 Int)
(declare-const rand_0_0 Int)
(declare-const T0_5 Int)
(declare-const TB_1 Int)
(declare-const T0_7 Int)
(declare-const T0_8 Int)
(declare-const T1_1 Int)
(declare-const req_1_0 Int)
(declare-const T1_2 Int)
(declare-const T1_3 Int)
(declare-const req_1_1 Int)
(declare-const T1_4 Int)
(declare-const rand_1_0 Int)
(declare-const T1_5 Int)
(declare-const T2_1 Int)
(declare-const req_2_0 Int)
(declare-const T2_2 Int)
(declare-const T2_3 Int)
(declare-const req_2_1 Int)
(declare-const T2_4 Int)
(declare-const rand_2_0 Int)
(declare-const T2_5 Int)
(declare-const T3_1 Int)
(declare-const req_3_0 Int)
(declare-const T3_2 Int)
(declare-const T3_3 Int)
(declare-const T3_4 Int)
(declare-const rand_3_0 Int)
(declare-const T3_5 Int)
(declare-const T3_6 Int)
(declare-const req_3_1 Int)
(declare-const T3_7 Int)
(declare-const T3_8 Int)
(declare-const T3_9 Int)
(declare-const T3_10 Int)
(declare-const T3_11 Int)
(declare-const req_3_2 Int)
(declare-const T3_12 Int)
(declare-const T3_13 Int)
(declare-const T3_14 Int)
(declare-const T3_15 Int)
(declare-const T3_16 Int)
(declare-const req_3_3 Int)
(declare-const T3_17 Int)

(assert (distinct TB_0 T0_1 T0_2 T0_3 T0_4 T0_5 TB_1 T0_7 T0_8 T1_1 T1_2 T1_3 T1_4 T1_5 T2_1 T2_2 T2_3 T2_4 T2_5 T3_1 T3_2 T3_3 T3_4 T3_5 T3_6 T3_7 T3_8 T3_9 T3_10 T3_11 T3_12 T3_13 T3_14 T3_15 T3_16 T3_17 ))

(declare-const sendT0_2 (Send Int Int Int Int))
(assert (and (= (ep sendT0_2) 3) (= (event sendT0_2) T0_2) (= (value sendT0_2) req_0_0)))
(declare-const recvT0_4 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_4) 0) (= (event recvT0_4) T0_4) (= (var recvT0_4) rand_0_0)))
(assert (= (nearestwait recvT0_4) T0_5))
(declare-const sendT0_7 (Send Int Int Int Int))
(assert (and (= (ep sendT0_7) 3) (= (event sendT0_7) T0_7) (= (value sendT0_7) req_0_1)))
(declare-const sendT1_2 (Send Int Int Int Int))
(assert (and (= (ep sendT1_2) 3) (= (event sendT1_2) T1_2) (= (value sendT1_2) req_1_0)))
(declare-const recvT1_4 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT1_4) 1) (= (event recvT1_4) T1_4) (= (var recvT1_4) rand_1_0)))
(assert (= (nearestwait recvT1_4) T1_5))
(declare-const sendT2_2 (Send Int Int Int Int))
(assert (and (= (ep sendT2_2) 3) (= (event sendT2_2) T2_2) (= (value sendT2_2) req_2_0)))
(declare-const recvT2_4 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT2_4) 2) (= (event recvT2_4) T2_4) (= (var recvT2_4) rand_2_0)))
(assert (= (nearestwait recvT2_4) T2_5))
(declare-const recvT3_1 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT3_1) 3) (= (event recvT3_1) T3_1) (= (var recvT3_1) req_3_0)))
(assert (= (nearestwait recvT3_1) T3_2))
(declare-const sendT3_4 (Send Int Int Int Int))
(assert (and (= (ep sendT3_4) 2) (= (event sendT3_4) T3_4) (= (value sendT3_4) rand_3_0)))
(declare-const recvT3_6 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT3_6) 3) (= (event recvT3_6) T3_6) (= (var recvT3_6) req_3_1)))
(assert (= (nearestwait recvT3_6) T3_7))
(declare-const sendT3_9 (Send Int Int Int Int))
(assert (and (= (ep sendT3_9) 0) (= (event sendT3_9) T3_9) (= (value sendT3_9) rand_3_0)))
(declare-const recvT3_11 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT3_11) 3) (= (event recvT3_11) T3_11) (= (var recvT3_11) req_3_2)))
(assert (= (nearestwait recvT3_11) T3_12))
(declare-const sendT3_14 (Send Int Int Int Int))
(assert (and (= (ep sendT3_14) 1) (= (event sendT3_14) T3_14) (= (value sendT3_14) rand_3_0)))
(declare-const recvT3_16 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT3_16) 3) (= (event recvT3_16) T3_16) (= (var recvT3_16) req_3_3)))
(assert (= (nearestwait recvT3_16) T3_17))

(assert (and
(HB TB_0 T0_1) (HB TB_0 T0_2) (HB TB_0 T0_3) (HB T0_2 T0_3) (HB TB_0 T0_4) (HB T0_2 T0_4) (HB TB_0 T0_5) (HB T0_4 T0_5) (HB TB_0 TB_1) (HB T0_2 TB_1) (HB T0_5 TB_1) (HB TB_1 T0_7) (HB T0_2 T0_7) (HB TB_1 T0_8) (HB TB_0 T1_1) (HB TB_0 T1_2) (HB TB_0 T1_3) (HB T1_2 T1_3) (HB TB_0 T1_4) (HB T1_2 T1_4) (HB TB_0 T1_5) (HB T1_4 T1_5) (HB TB_0 TB_1) (HB T1_2 TB_1) (HB T1_5 TB_1) (HB TB_0 T2_1) (HB TB_0 T2_2) (HB TB_0 T2_3) (HB T2_2 T2_3) (HB TB_0 T2_4) (HB T2_2 T2_4) (HB TB_0 T2_5) (HB T2_4 T2_5) (HB TB_0 TB_1) (HB T2_2 TB_1) (HB T2_5 TB_1) (HB TB_0 T3_1) (HB TB_0 T3_2) (HB T3_1 T3_2) (HB TB_0 T3_3) (HB TB_0 T3_4) (HB T3_2 T3_4) (HB TB_0 T3_5) (HB TB_0 T3_6) (HB T3_4 T3_6) (HB T3_1 T3_6) (HB TB_0 T3_7) (HB T3_6 T3_7) (HB TB_0 T3_8) (HB T3_4 T3_8) (HB TB_0 T3_9) (HB T3_4 T3_9) (HB T3_7 T3_9) (HB TB_0 T3_10) (HB TB_0 T3_11) (HB T3_9 T3_11) (HB T3_6 T3_11) (HB TB_0 T3_12) (HB T3_11 T3_12) (HB TB_0 T3_13) (HB T3_9 T3_13) (HB TB_0 T3_14) (HB T3_9 T3_14) (HB T3_12 T3_14) (HB TB_0 T3_15) (HB TB_0 T3_16) (HB T3_14 T3_16) (HB T3_11 T3_16) (HB TB_0 T3_17) (HB T3_16 T3_17) ))


(assert (and
(or (MATCH recvT3_11 sendT0_2) (MATCH recvT3_11 sendT0_7) (MATCH recvT3_11 sendT1_2) (MATCH recvT3_11 sendT2_2) )
(or (MATCH recvT1_4 sendT3_14) )
(or (MATCH recvT3_6 sendT0_2) (MATCH recvT3_6 sendT0_7) (MATCH recvT3_6 sendT1_2) (MATCH recvT3_6 sendT2_2) )
(or (MATCH recvT3_16 sendT0_7) (MATCH recvT3_16 sendT1_2) (MATCH recvT3_16 sendT2_2) )
(or (MATCH recvT0_4 sendT3_9) )
(or (MATCH recvT3_1 sendT0_2) (MATCH recvT3_1 sendT1_2) (MATCH recvT3_1 sendT2_2) )
(or (MATCH recvT2_4 sendT3_4) )
))

(assert (= req_0_0 1))
(assert (= req_0_1 1))
(assert (= req_1_0 1))
(assert (= req_1_1 1))
(assert (= req_2_0 1))
(assert (= req_2_1 1))

(assert (not ( and (> req_3_0 0) (> req_3_1 0) (> req_3_2 0) )))

(check-sat)
