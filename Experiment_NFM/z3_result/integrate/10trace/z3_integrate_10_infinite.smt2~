(declare-datatypes (T1 T2 T3 T4 T5)
 ((Recv (mk-recv (match T1) (ep T2) (var T3) (event T4) (nearestwait T5)))))
(declare-datatypes (T1 T2 T3 T4)
((Send (mk-send (match T1) (ep T2) (value T3) (event T4)))))

(define-fun HB ((a Int) (b Int)) Bool
  (if(< a b)
 true
 false))

(define-fun MATCH ((r (Recv Int Int Int Int Int)) (s (Send Int Int Int Int))) Bool
(if(and (= (ep r) (ep s)) (= (var r) (value s))
(HB (event s) (nearestwait r)) (= (match r) (event s))
(= (match s) (event r)))
true
false
)
)

(declare-const T0_0 Int)
(declare-const task_0 Int)
(declare-const T0_1 Int)
(declare-const result_0 Int)
(declare-const T0_2 Int)
(declare-const answer_0 Int)
(declare-const T0_3 Int)
(declare-const T0_4 Int)
(declare-const T0_5 Int)
(declare-const task_1 Int)
(declare-const T0_6 Int)
(declare-const T0_7 Int)
(declare-const T0_8 Int)
(declare-const task_2 Int)
(declare-const T0_9 Int)
(declare-const T0_10 Int)
(declare-const T0_11 Int)
(declare-const task_3 Int)
(declare-const T0_12 Int)
(declare-const T0_13 Int)
(declare-const T0_14 Int)
(declare-const task_4 Int)
(declare-const T0_15 Int)
(declare-const T0_16 Int)
(declare-const T0_17 Int)
(declare-const task_5 Int)
(declare-const T0_18 Int)
(declare-const T0_19 Int)
(declare-const T0_20 Int)
(declare-const task_6 Int)
(declare-const T0_21 Int)
(declare-const T0_22 Int)
(declare-const T0_23 Int)
(declare-const task_7 Int)
(declare-const T0_24 Int)
(declare-const T0_25 Int)
(declare-const T0_26 Int)
(declare-const task_8 Int)
(declare-const T0_27 Int)
(declare-const T0_28 Int)
(declare-const T0_29 Int)
(declare-const task_9 Int)
(declare-const T0_30 Int)
(declare-const result_0_1 Int)
(declare-const T0_31 Int)
(declare-const T0_32 Int)
(declare-const answer_1 Int)
(declare-const result_1 Int)
(declare-const T0_33 Int)
(declare-const result_0_2 Int)
(declare-const T0_34 Int)
(declare-const T0_35 Int)
(declare-const answer_2 Int)
(declare-const result_2 Int)
(declare-const T0_36 Int)
(declare-const result_0_3 Int)
(declare-const T0_37 Int)
(declare-const T0_38 Int)
(declare-const answer_3 Int)
(declare-const result_3 Int)
(declare-const T0_39 Int)
(declare-const result_0_4 Int)
(declare-const T0_40 Int)
(declare-const T0_41 Int)
(declare-const answer_4 Int)
(declare-const result_4 Int)
(declare-const T0_42 Int)
(declare-const result_0_5 Int)
(declare-const T0_43 Int)
(declare-const T0_44 Int)
(declare-const answer_5 Int)
(declare-const result_5 Int)
(declare-const T0_45 Int)
(declare-const result_0_6 Int)
(declare-const T0_46 Int)
(declare-const T0_47 Int)
(declare-const answer_6 Int)
(declare-const result_6 Int)
(declare-const T0_48 Int)
(declare-const result_0_7 Int)
(declare-const T0_49 Int)
(declare-const T0_50 Int)
(declare-const answer_7 Int)
(declare-const result_7 Int)
(declare-const T0_51 Int)
(declare-const result_0_8 Int)
(declare-const T0_52 Int)
(declare-const T0_53 Int)
(declare-const answer_8 Int)
(declare-const result_8 Int)
(declare-const T0_54 Int)
(declare-const result_0_9 Int)
(declare-const T0_55 Int)
(declare-const T0_56 Int)
(declare-const answer_9 Int)
(declare-const result_9 Int)
(declare-const T0_57 Int)
(declare-const T1_0 Int)
(declare-const task_1_0 Int)
(declare-const T1_1 Int)
(declare-const T1_2 Int)
(declare-const result_1_0 Int)
(declare-const T1_3 Int)
(declare-const T2_0 Int)
(declare-const task_2_0 Int)
(declare-const T2_1 Int)
(declare-const T2_2 Int)
(declare-const result_2_0 Int)
(declare-const T2_3 Int)
(declare-const T3_0 Int)
(declare-const task_3_0 Int)
(declare-const T3_1 Int)
(declare-const T3_2 Int)
(declare-const result_3_0 Int)
(declare-const T3_3 Int)
(declare-const T4_0 Int)
(declare-const task_4_0 Int)
(declare-const T4_1 Int)
(declare-const T4_2 Int)
(declare-const result_4_0 Int)
(declare-const T4_3 Int)
(declare-const T5_0 Int)
(declare-const task_5_0 Int)
(declare-const T5_1 Int)
(declare-const T5_2 Int)
(declare-const result_5_0 Int)
(declare-const T5_3 Int)
(declare-const T6_0 Int)
(declare-const task_6_0 Int)
(declare-const T6_1 Int)
(declare-const T6_2 Int)
(declare-const result_6_0 Int)
(declare-const T6_3 Int)
(declare-const T7_0 Int)
(declare-const task_7_0 Int)
(declare-const T7_1 Int)
(declare-const T7_2 Int)
(declare-const result_7_0 Int)
(declare-const T7_3 Int)
(declare-const T8_0 Int)
(declare-const task_8_0 Int)
(declare-const T8_1 Int)
(declare-const T8_2 Int)
(declare-const result_8_0 Int)
(declare-const T8_3 Int)
(declare-const T9_0 Int)
(declare-const task_9_0 Int)
(declare-const T9_1 Int)
(declare-const T9_2 Int)
(declare-const result_9_0 Int)
(declare-const T9_3 Int)

(assert (distinct T0_0 T0_1 T0_2 T0_3 T0_4 T0_5 T0_6 T0_7 T0_8 T0_9 T0_10 T0_11 T0_12 T0_13 T0_14 T0_15 T0_16 T0_17 T0_18 T0_19 T0_20 T0_21 T0_22 T0_23 T0_24 T0_25 T0_26 T0_27 T0_28 T0_29 T0_30 T0_31 T0_32 T0_33 T0_34 T0_35 T0_36 T0_37 T0_38 T0_39 T0_40 T0_41 T0_42 T0_43 T0_44 T0_45 T0_46 T0_47 T0_48 T0_49 T0_50 T0_51 T0_52 T0_53 T0_54 T0_55 T0_56 T0_57 T1_0 T1_1 T1_2 T1_3 T2_0 T2_1 T2_2 T2_3 T3_0 T3_1 T3_2 T3_3 T4_0 T4_1 T4_2 T4_3 T5_0 T5_1 T5_2 T5_3 T6_0 T6_1 T6_2 T6_3 T7_0 T7_1 T7_2 T7_3 T8_0 T8_1 T8_2 T8_3 T9_0 T9_1 T9_2 T9_3 ))

(declare-const sendT0_3 (Send Int Int Int Int))
(assert (and (= (ep sendT0_3) 1) (= (event sendT0_3) T0_3) (= (value sendT0_3) task_0)))
(declare-const sendT0_6 (Send Int Int Int Int))
(assert (and (= (ep sendT0_6) 2) (= (event sendT0_6) T0_6) (= (value sendT0_6) task_1)))
(declare-const sendT0_9 (Send Int Int Int Int))
(assert (and (= (ep sendT0_9) 3) (= (event sendT0_9) T0_9) (= (value sendT0_9) task_2)))
(declare-const sendT0_12 (Send Int Int Int Int))
(assert (and (= (ep sendT0_12) 4) (= (event sendT0_12) T0_12) (= (value sendT0_12) task_3)))
(declare-const sendT0_15 (Send Int Int Int Int))
(assert (and (= (ep sendT0_15) 5) (= (event sendT0_15) T0_15) (= (value sendT0_15) task_4)))
(declare-const sendT0_18 (Send Int Int Int Int))
(assert (and (= (ep sendT0_18) 6) (= (event sendT0_18) T0_18) (= (value sendT0_18) task_5)))
(declare-const sendT0_21 (Send Int Int Int Int))
(assert (and (= (ep sendT0_21) 7) (= (event sendT0_21) T0_21) (= (value sendT0_21) task_6)))
(declare-const sendT0_24 (Send Int Int Int Int))
(assert (and (= (ep sendT0_24) 8) (= (event sendT0_24) T0_24) (= (value sendT0_24) task_7)))
(declare-const sendT0_27 (Send Int Int Int Int))
(assert (and (= (ep sendT0_27) 9) (= (event sendT0_27) T0_27) (= (value sendT0_27) task_8)))
(declare-const recvT0_30 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_30) 0) (= (event recvT0_30) T0_30) (= (var recvT0_30) result_0_1)))
(assert (= (nearestwait recvT0_30) T0_31))
(declare-const recvT0_33 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_33) 0) (= (event recvT0_33) T0_33) (= (var recvT0_33) result_0_2)))
(assert (= (nearestwait recvT0_33) T0_34))
(declare-const recvT0_36 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_36) 0) (= (event recvT0_36) T0_36) (= (var recvT0_36) result_0_3)))
(assert (= (nearestwait recvT0_36) T0_37))
(declare-const recvT0_39 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_39) 0) (= (event recvT0_39) T0_39) (= (var recvT0_39) result_0_4)))
(assert (= (nearestwait recvT0_39) T0_40))
(declare-const recvT0_42 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_42) 0) (= (event recvT0_42) T0_42) (= (var recvT0_42) result_0_5)))
(assert (= (nearestwait recvT0_42) T0_43))
(declare-const recvT0_45 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_45) 0) (= (event recvT0_45) T0_45) (= (var recvT0_45) result_0_6)))
(assert (= (nearestwait recvT0_45) T0_46))
(declare-const recvT0_48 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_48) 0) (= (event recvT0_48) T0_48) (= (var recvT0_48) result_0_7)))
(assert (= (nearestwait recvT0_48) T0_49))
(declare-const recvT0_51 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_51) 0) (= (event recvT0_51) T0_51) (= (var recvT0_51) result_0_8)))
(assert (= (nearestwait recvT0_51) T0_52))
(declare-const recvT0_54 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT0_54) 0) (= (event recvT0_54) T0_54) (= (var recvT0_54) result_0_9)))
(assert (= (nearestwait recvT0_54) T0_55))
(declare-const recvT1_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT1_0) 1) (= (event recvT1_0) T1_0) (= (var recvT1_0) task_1_0)))
(assert (= (nearestwait recvT1_0) T1_1))
(declare-const sendT1_2 (Send Int Int Int Int))
(assert (and (= (ep sendT1_2) 0) (= (event sendT1_2) T1_2) (= (value sendT1_2) result_1_0)))
(declare-const recvT2_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT2_0) 2) (= (event recvT2_0) T2_0) (= (var recvT2_0) task_2_0)))
(assert (= (nearestwait recvT2_0) T2_1))
(declare-const sendT2_2 (Send Int Int Int Int))
(assert (and (= (ep sendT2_2) 0) (= (event sendT2_2) T2_2) (= (value sendT2_2) result_2_0)))
(declare-const recvT3_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT3_0) 3) (= (event recvT3_0) T3_0) (= (var recvT3_0) task_3_0)))
(assert (= (nearestwait recvT3_0) T3_1))
(declare-const sendT3_2 (Send Int Int Int Int))
(assert (and (= (ep sendT3_2) 0) (= (event sendT3_2) T3_2) (= (value sendT3_2) result_3_0)))
(declare-const recvT4_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT4_0) 4) (= (event recvT4_0) T4_0) (= (var recvT4_0) task_4_0)))
(assert (= (nearestwait recvT4_0) T4_1))
(declare-const sendT4_2 (Send Int Int Int Int))
(assert (and (= (ep sendT4_2) 0) (= (event sendT4_2) T4_2) (= (value sendT4_2) result_4_0)))
(declare-const recvT5_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT5_0) 5) (= (event recvT5_0) T5_0) (= (var recvT5_0) task_5_0)))
(assert (= (nearestwait recvT5_0) T5_1))
(declare-const sendT5_2 (Send Int Int Int Int))
(assert (and (= (ep sendT5_2) 0) (= (event sendT5_2) T5_2) (= (value sendT5_2) result_5_0)))
(declare-const recvT6_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT6_0) 6) (= (event recvT6_0) T6_0) (= (var recvT6_0) task_6_0)))
(assert (= (nearestwait recvT6_0) T6_1))
(declare-const sendT6_2 (Send Int Int Int Int))
(assert (and (= (ep sendT6_2) 0) (= (event sendT6_2) T6_2) (= (value sendT6_2) result_6_0)))
(declare-const recvT7_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT7_0) 7) (= (event recvT7_0) T7_0) (= (var recvT7_0) task_7_0)))
(assert (= (nearestwait recvT7_0) T7_1))
(declare-const sendT7_2 (Send Int Int Int Int))
(assert (and (= (ep sendT7_2) 0) (= (event sendT7_2) T7_2) (= (value sendT7_2) result_7_0)))
(declare-const recvT8_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT8_0) 8) (= (event recvT8_0) T8_0) (= (var recvT8_0) task_8_0)))
(assert (= (nearestwait recvT8_0) T8_1))
(declare-const sendT8_2 (Send Int Int Int Int))
(assert (and (= (ep sendT8_2) 0) (= (event sendT8_2) T8_2) (= (value sendT8_2) result_8_0)))
(declare-const recvT9_0 (Recv Int Int Int Int Int))
(assert (and (= (ep recvT9_0) 9) (= (event recvT9_0) T9_0) (= (var recvT9_0) task_9_0)))
(assert (= (nearestwait recvT9_0) T9_1))
(declare-const sendT9_2 (Send Int Int Int Int))
(assert (and (= (ep sendT9_2) 0) (= (event sendT9_2) T9_2) (= (value sendT9_2) result_9_0)))

(assert (and
(HB T0_30 T0_31) (HB T0_30 T0_33) (HB T0_33 T0_34) (HB T0_33 T0_36) (HB T0_36 T0_37) (HB T0_36 T0_39) (HB T0_39 T0_40) (HB T0_39 T0_42) (HB T0_42 T0_43) (HB T0_42 T0_45) (HB T0_45 T0_46) (HB T0_45 T0_48) (HB T0_48 T0_49) (HB T0_48 T0_51) (HB T0_51 T0_52) (HB T0_51 T0_54) (HB T0_54 T0_55) (HB T1_0 T1_1) (HB T1_1 T1_2) (HB T2_0 T2_1) (HB T2_1 T2_2) (HB T3_0 T3_1) (HB T3_1 T3_2) (HB T4_0 T4_1) (HB T4_1 T4_2) (HB T5_0 T5_1) (HB T5_1 T5_2) (HB T6_0 T6_1) (HB T6_1 T6_2) (HB T7_0 T7_1) (HB T7_1 T7_2) (HB T8_0 T8_1) (HB T8_1 T8_2) (HB T9_0 T9_1) (HB T9_1 T9_2) ))


(assert (and
(or (MATCH recvT6_0 sendT0_18) )
(or (MATCH recvT0_39 sendT1_2) (MATCH recvT0_39 sendT2_2) (MATCH recvT0_39 sendT3_2) (MATCH recvT0_39 sendT4_2) (MATCH recvT0_39 sendT5_2) (MATCH recvT0_39 sendT6_2) (MATCH recvT0_39 sendT7_2) (MATCH recvT0_39 sendT8_2) (MATCH recvT0_39 sendT9_2) )
(or (MATCH recvT0_36 sendT1_2) (MATCH recvT0_36 sendT2_2) (MATCH recvT0_36 sendT3_2) (MATCH recvT0_36 sendT4_2) (MATCH recvT0_36 sendT5_2) (MATCH recvT0_36 sendT6_2) (MATCH recvT0_36 sendT7_2) (MATCH recvT0_36 sendT8_2) (MATCH recvT0_36 sendT9_2) )
(or (MATCH recvT8_0 sendT0_24) )
(or (MATCH recvT0_33 sendT1_2) (MATCH recvT0_33 sendT2_2) (MATCH recvT0_33 sendT3_2) (MATCH recvT0_33 sendT4_2) (MATCH recvT0_33 sendT5_2) (MATCH recvT0_33 sendT6_2) (MATCH recvT0_33 sendT7_2) (MATCH recvT0_33 sendT8_2) (MATCH recvT0_33 sendT9_2) )
(or (MATCH recvT1_0 sendT0_3) )
(or (MATCH recvT0_30 sendT1_2) (MATCH recvT0_30 sendT2_2) (MATCH recvT0_30 sendT3_2) (MATCH recvT0_30 sendT4_2) (MATCH recvT0_30 sendT5_2) (MATCH recvT0_30 sendT6_2) (MATCH recvT0_30 sendT7_2) (MATCH recvT0_30 sendT8_2) (MATCH recvT0_30 sendT9_2) )
(or (MATCH recvT3_0 sendT0_9) )
(or (MATCH recvT0_48 sendT1_2) (MATCH recvT0_48 sendT2_2) (MATCH recvT0_48 sendT3_2) (MATCH recvT0_48 sendT4_2) (MATCH recvT0_48 sendT5_2) (MATCH recvT0_48 sendT6_2) (MATCH recvT0_48 sendT7_2) (MATCH recvT0_48 sendT8_2) (MATCH recvT0_48 sendT9_2) )
(or (MATCH recvT5_0 sendT0_15) )
(or (MATCH recvT0_45 sendT1_2) (MATCH recvT0_45 sendT2_2) (MATCH recvT0_45 sendT3_2) (MATCH recvT0_45 sendT4_2) (MATCH recvT0_45 sendT5_2) (MATCH recvT0_45 sendT6_2) (MATCH recvT0_45 sendT7_2) (MATCH recvT0_45 sendT8_2) (MATCH recvT0_45 sendT9_2) )
(or (MATCH recvT0_42 sendT1_2) (MATCH recvT0_42 sendT2_2) (MATCH recvT0_42 sendT3_2) (MATCH recvT0_42 sendT4_2) (MATCH recvT0_42 sendT5_2) (MATCH recvT0_42 sendT6_2) (MATCH recvT0_42 sendT7_2) (MATCH recvT0_42 sendT8_2) (MATCH recvT0_42 sendT9_2) )
(or (MATCH recvT7_0 sendT0_21) )
(or (MATCH recvT9_0 sendT0_27) )
(or (MATCH recvT2_0 sendT0_6) )
(or (MATCH recvT0_54 sendT1_2) (MATCH recvT0_54 sendT2_2) (MATCH recvT0_54 sendT3_2) (MATCH recvT0_54 sendT4_2) (MATCH recvT0_54 sendT5_2) (MATCH recvT0_54 sendT6_2) (MATCH recvT0_54 sendT7_2) (MATCH recvT0_54 sendT8_2) (MATCH recvT0_54 sendT9_2) )
(or (MATCH recvT4_0 sendT0_12) )
(or (MATCH recvT0_51 sendT1_2) (MATCH recvT0_51 sendT2_2) (MATCH recvT0_51 sendT3_2) (MATCH recvT0_51 sendT4_2) (MATCH recvT0_51 sendT5_2) (MATCH recvT0_51 sendT6_2) (MATCH recvT0_51 sendT7_2) (MATCH recvT0_51 sendT8_2) (MATCH recvT0_51 sendT9_2) )
))

(assert (= task_0 0))
(assert (= result_0 0))
(assert (= answer_0 0))
(assert (= task_1 (+ task_0 1)))
(assert (= task_2 (+ task_1 1)))
(assert (= task_3 (+ task_2 1)))
(assert (= task_4 (+ task_3 1)))
(assert (= task_5 (+ task_4 1)))
(assert (= task_6 (+ task_5 1)))
(assert (= task_7 (+ task_6 1)))
(assert (= task_8 (+ task_7 1)))
(assert (= task_9 (+ task_8 1)))
(assert (= answer_1 (+ result_1 1)))
(assert (= answer_2 (+ result_2 1)))
(assert (= answer_3 (+ result_3 1)))
(assert (= answer_4 (+ result_4 1)))
(assert (= answer_5 (+ result_5 1)))
(assert (= answer_6 (+ result_6 1)))
(assert (= answer_7 (+ result_7 1)))
(assert (= answer_8 (+ result_8 1)))
(assert (= answer_9 (+ result_9 1)))



(check-sat)
